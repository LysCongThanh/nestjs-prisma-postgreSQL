// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id             Int      @unique @default(autoincrement())
  email          String   @unique
  hashedPassword String
  first_name     String?
  last_name      String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  groups   group[]
  contacts contact[]
}

model contact {
  id         Int      @unique @default(autoincrement())
  user_id    Int
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  name       String?
  telephone  String?
  company    String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  groups group_contact[]
}

model group {
  id         Int      @unique @default(autoincrement())
  group_name String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  contacts group_contact[]
  user     user?           @relation(fields: [userId], references: [id])
  userId   Int
}

model group_contact {
  id         Int      @unique @default(autoincrement())
  contact    contact? @relation(fields: [contactId], references: [id], onDelete: Cascade)
  contactId  Int?
  group      group?   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId    Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
